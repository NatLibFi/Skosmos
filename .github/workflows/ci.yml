name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    # run the CI workflow at 6:00am UTC every Monday
    - cron: '0 6 * * MON'
  tags:
    - '**'

jobs:
#  build-test:
#    runs-on: ubuntu-latest
#    permissions:
#      packages: write
#    timeout-minutes: 10
#    continue-on-error: ${{ matrix.experimental }}
#    strategy:
#      fail-fast: false
#      matrix:
#        php_version: ["8.1", "8.2", "8.3"]
#        experimental: [false]
#
#    steps:
#    - name: Check out repository code
#      uses: actions/checkout@v3
#      with:
#        fetch-depth: 0
#
#    - name: Start up containers
#      run: cd tests; ./init_containers.sh
#
#    - name: Cache Composer dependencies
#      uses: actions/cache@v3
#      with:
#        path: |
#          /tmp/composer-cache
#          vendor
#          components
#        key: ${{ runner.os }}-php${{ matrix.php_version}}-skosmos3-${{ hashFiles('**/composer.json') }}
#        restore-keys: |
#          ${{ runner.os }}-php${{ matrix.php_version}}-skosmos3-
#
#    - name: Set up PHP
#      uses: shivammathur/setup-php@v2
#      with:
#        php-version: ${{ matrix.php_version }}
#        extensions: intl, xsl, pcov
#        coverage: pcov
#
#    - name: Install Composer dependencies
#      run: composer install --no-progress --prefer-dist
#
#    - name: Install Node
#      uses: actions/setup-node@v3
#      with:
#        node-version: 16.x
#
#    - name: Install JavaScript dependencies
#      run: npm install
#
#    - name: Check PHP code style
#      run: ./vendor/bin/php-cs-fixer fix src --diff --dry-run
#
#    - name: Check JavaScript code style
#      run: cd resource/js; npx standard *.js
#
#    - name: Run PHPUnit tests
#      run: ./vendor/bin/phpunit --configuration phpunit.xml
#
#    - name: Publish code coverage to Code Climate
#      uses: paambaati/codeclimate-action@v5.0.0
#      env:
#        CC_TEST_REPORTER_ID: fb98170a5c7ea9cc2bbab19ff26268335e6a11a4f8267ca935e5e8ff4624886c
#      with:
#        prefix: /app
#
#    - name: Publish code coverage to Codecov
#      uses: codecov/codecov-action@v3
#
#  cypress-test:
#    runs-on: ubuntu-latest
#    steps:
#    - name: Check out repository code
#      uses: actions/checkout@v3
#      with:
#        fetch-depth: 0
#
#    - name: Start up containers
#      run: cd tests; ./init_containers.sh
#
#    - name: Install Node
#      uses: actions/setup-node@v3
#      with:
#        node-version: 16.x
#
#    - name: Install JavaScript dependencies
#      run: npm install
#
#    - name: Run Cypress tests
#      run: npx cypress run
#
  publish-docker-latest:
    name: publish latest Docker image
    #needs: [ cypress-test ]
    runs-on: ubuntu-22.04 # muuta uudemmaksi
    timeout-minutes: 15
    if: >-
      (github.event_name == 'push' && github.ref_name == 'issue1763-pre-built-docker-images-for-public-use') ||
      (github.event_name == 'pull_request' && github.head_ref == 'issue1763-pre-built-docker-images-for-public-use')
    # if: github.event_name == 'push' && github.ref_name == 'issue1763-pre-built-docker-images-for-public-use' # Ref pois? Ei muissa brancheissä
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Login to Quay.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1  # v3.5.0
        with:
          registry: quay.io
          username: ${{ secrets.YHTEENTOIMIVUUSPALVELUT_QUAY_IO_USERNAME }}
          password: ${{ secrets.YHTEENTOIMIVUUSPALVELUT_QUAY_IO_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f  # v5.8.0
        with:
          images: quay.io/natlibfi/skosmos
          tags: | # voisi tyottaa latestin lisäksi myös release-tagatyt eli versionumeroidut. Muista semanttisen versionnin hommat
            type=raw,value=ci-test
            type=raw,value=ci-test-${{ github.sha }}

      - name: Build and push to Quay.io
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
        with:
          context: . # ./dockerfiles/jena-fuseki2-docker
          file: dockerfiles/Dockerfile.ubuntu # ./dockerfiles/jena-fuseki2-docker/Dockerfile # later: ./dockerfiles/Dockerfile.ubuntu
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Debug event context
        run: |
          echo "event_name=${{ github.event_name }}"
          echo "ref=${{ github.ref }}"
          echo "ref_name=${{ github.ref_name }}"

      - name: Show computed tags
        run: |
          echo "Tags:"
          echo "${{ steps.meta.outputs.tags }}"
          echo "Labels:"
          echo "${{ steps.meta.outputs.labels }}"

  # Julkaisuhommat
  publish-release:
    name: publish release
    #needs: [ cypress-test ]
    runs-on: ubuntu-22.04
    #if: >-
    #  (github.event_name == 'push' && github.ref_name == 'issue1763-pre-built-docker-images-for-public-use') ||
    #  (github.event_name == 'pull_request' && github.head_ref == 'issue1763-pre-built-docker-images-for-public-use')
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Login to Quay.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1  # v3.5.0
        with:
          registry: quay.io
          username: ${{ secrets.YHTEENTOIMIVUUSPALVELUT_QUAY_IO_USERNAME }}
          password: ${{ secrets.YHTEENTOIMIVUUSPALVELUT_QUAY_IO_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f  # v5.8.0
        with:
          images: quay.io/natlibfi/skosmos
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}},suffix=-{{date 'YYYYMMDD'}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push to Quay.io
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Debug event context
        run: |
          echo "event_name=${{ github.event_name }}"
          echo "ref=${{ github.ref }}"
          echo "ref_name=${{ github.ref_name }}"

      - name: Show computed tags
        run: |
          echo "Tags:"
          echo "${{ steps.meta.outputs.tags }}"
          echo "Labels:"
          echo "${{ steps.meta.outputs.labels }}"
